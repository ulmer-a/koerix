build$ make qemu
Hello, world!
Setting up Global Descriptor Table ... done
Total RAM size: 255MB (65504 page frames)
PageMap: ref counter size: ~63KB
PageMap: stored at 0xffff800000034000
  0x1000 - 0x33fff: bootloader reclaimable
  0x34000 - 0x9efff: usable
  0x9fc00 - 0x9ffff: reserved
  0xf0000 - 0xfffff: reserved
  0x100000 - 0x1098cf: kernel/module code, data
  0x10a000 - 0x10b6d0: kernel/module code, data
  0x10c000 - 0x11192f: kernel/module code, data
  0x112000 - 0xfc34fff: usable
  0xfc35000 - 0xfc45fff: bootloader reclaimable
  0xfc46000 - 0xfc47fff: kernel/module code, data
  0xfc48000 - 0xffdffff: bootloader reclaimable
  0xffe0000 - 0xfffffff: reserved
  0xfd000000 - 0xfd2fffff: framebuffer
  0xfffc0000 - 0xffffffff: reserved
Usable RAM: 251/255 MB
reconfigure PIC
Setting up interrupt descriptor table
allocating kernel virtual address space
mapping physical memory to the upper half... done
trying to enable NX: ok
successfully written %cr3
trying to enable SSE: ok
trying to enable AVX: not available
created new kernel task with TID 1
created new kernel task with TID 2
kernel task #2 started executing
init platform drivers
setting timer freq: 50Hz
init PC serial port #0 at port 0x3f8
uart0: baud_rate=115200
init PC serial port #1 at port 0x2f8
uart1: baud_rate=115200
welcome on uart!
created new user task with TID 3
kernel task #2 terminated
kernel task #1 started executing
Welcome from the idle task!
System call:128
Exit with status 0xfffffff00badbeef...
Built target qemu
